---
- hosts: env_{{ env_id }}:&compute
  vars_files:
    - "vars/mos_releases/{{ mos_release }}.yml"
  tasks:

    - name: Restart OpenStack services on computes
      tags: compute_services
      ignore_errors: yes
      service: name={{ item }} state=restarted
      register: restart_result
      failed_when:
        - restart_result | failed
        - "'no service or tool found for' not in restart_result.msg"
        - "'Could not find the requested service' not in restart_result.msg"
      with_items: "{{ compute_services }}"
      when: restart is undefined or
            restart

- hosts: env_{{ env_id }}:&controller
  vars_files:
    - "vars/mos_releases/{{ mos_release }}.yml"
  tasks:
    - name: Restart OpenStack services on controllers
      tags: controller_services
      ignore_errors: yes
      service: name={{ item }} state=restarted
      register: restart_result
      failed_when:
        - restart_result | failed
        - "'no service or tool found for' not in restart_result.msg"
        - "'Could not find the requested service' not in restart_result.msg"
      with_items: "{{ controller_services }}"
      when: restart is undefined or
            restart

    - name: Get OCFs which have "remove_artifacts_on_stop_start"
      tags: controller_pcs
      ignore_errors: yes
      shell: "fgrep -lr remove_artifacts_on_stop_start /usr/lib/ocf/resource.d/"
      failed_when: false
      register: ocfs

    - block:
        - name: Disable removing artifacts for neutron on restart
          tags: controller_pcs
          command: 'sed -i "s/ remove_artifacts_on_stop_start=\$/ remove_artifacts_on_stop_start=false #\$/g" "{{ item }}"'
          with_items: "{{ ocfs.stdout_lines }}"
          when:
            - ocfs is defined
            - ocfs.stdout != ""

        - name: Stop OpenStack services under Pacemaker
          tags: controller_pcs
          run_once: true
          ignore_errors: yes
          script: files/pcs_resource_stop.sh {{ item }}
          register: stop_result
          changed_when:
            - stop_result.rc < 100
          failed_when:
            - stop_result | failed
            - stop_result.rc < 100
          with_items: "{{ controller_pcs_resources }}"

        - name: Force Stop OpenStack services under Pacemaker
          tags: controller_pcs
          ignore_errors: yes
          script: files/pcs_resource_stop_force.sh {{ item }}
          register: fstop_result
          changed_when:
            - fstop_result.rc < 100
          failed_when:
            - fstop_result | failed
            - fstop_result.rc < 100
          with_items: "{{ controller_pcs_resources }}"

        - name: Start OpenStack services under Pacemaker
          tags: controller_pcs
          run_once: true
          ignore_errors: yes
          script: files/pcs_resource_start.sh {{ item }}
          register: start_result
          changed_when:
            - start_result.rc < 100
          failed_when:
            - start_result | failed
            - start_result.rc < 100
          with_items: "{{ controller_pcs_resources }}"

      when: restart is undefined or
            restart
      always:
        - name: Enable removing artifacts for neutron on restart
          tags: controller_pcs
          command: 'sed -i "s/ remove_artifacts_on_stop_start=false #\$/ remove_artifacts_on_stop_start=\$/g" "{{ item }}"'
          with_items: "{{ ocfs.stdout_lines }}"
          when:
            - ocfs is defined
            - ocfs.stdout != ""
