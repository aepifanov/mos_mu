---

- hosts: fuel
  connection: local
  any_errors_fatal: true
  vars_files:
    - "vars/common.yml"
    - "vars/mos_releases/{{ mos_release }}.yml"

  tasks:
  - name: Remove 9.0-holdback LP1663728
    remove_repo_by_name:
      env_id: "{{ env_id }}"
      name: "mos-holdback"

  - name: Add MOS 9.2 repos
    add_repo_to_env:
      env_id: "{{ env_id }}"
      name: "{{ item.name }}"
      url: "{{ item.url }}"
      suite: "{{ item.suite }}"
      section: "{{ item.section }}"
      type: "{{ item.type }}"
      priority: "{{ item.priority }}"
    with_items: "{{ mos92_repos }}"


- hosts: env_{{ env_id }}
  any_errors_fatal: true
  vars_files:
    - "vars/common.yml"
    - "vars/mos_releases/{{ mos_release }}.yml"
    - "vars/steps.yml"

  tasks:
  - name: Fix apt-preferences
    command: sed -i -e 's|n=mos9.0-updates|n=mos9.0|' /etc/apt/preferences.d/mos-updates.pref
    failed_when: false

  - name: Remove 9.0-holdback from nodes LP1663728
    file:
      path: "{{ item }}"
      state: absent
    with_items:
      - /etc/apt/sources.list.d/mos-holdback.list
      - /etc/apt/preferences.d/mos-holdback.pref

  - name: Fix domain name in Neutron conf
    command: sed -i -e 's|domain_id=Default|domain_name=Default|' /etc/neutron/neutron.conf
    failed_when: false

  - name: Remove mos-holdback.list LP1663728
    file:
        path: "/etc/apt/sources.list.d/mos-holdback.list"
        state: absent

  - name: Add MOS 9.2 repo key
    apt_key:
        url={{ fuel_url }}/{{ snapshot_repo }}/archive-mos9.0.key

  - name: Update MCollective
    apt:
      update_cache: yes
      name: "{{ item }}"
      state: latest
    with_items:
      - nailgun-agent
      - nailgun-mcagents

  - name: Restart MCollective
    service:
      name: mcollective
      state: restarted

  - include: tasks/apt_update.yml

  - include: tasks/update_special_services.yml


# LP1695061
- hosts: env_{{ env_id }}:&controller[0]
  any_errors_fatal: true

  tasks:
    - name: Check if CEPH is deployed on this env
      local_action: shell fuel node --env-id {{ env_id }} | grep ceph-osd
      run_once: true
      ignore_errors: true
      register: ceph_exist

    - name: Check what permission images pool has
      shell: ceph auth get client.compute | grep 'caps osd' | grep -o -E 'allow [rwx]{1,3} pool=images' | cut -d ' ' -f 2
      register: ceph_permission_check
      when:
        - ceph_exist.rc == 0

    - name: If images pool doesn't have write permission - add it
      command: ceph auth caps client.compute mon 'allow r' osd 'allow class-read object_prefix rbd_children, allow rwx pool=volumes, allow rwx pool=images, allow rwx pool=compute'
      when:
        - ceph_exist.rc == 0
        - ceph_permission_check.stdout != 'rwx'


- include: restart_services.yml
